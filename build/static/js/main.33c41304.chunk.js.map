{"version":3,"sources":["serviceWorker.js","components/Navigation.js","pages/StyleGuide/StyleGuide.js","pages/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","Menu","SubMenu","Layout","Content","Sider","StyleGuide","style","height","className","theme","mode","defaultSelectedKeys","lineHeight","Item","key","marginLeft","width","defaultOpenKeys","borderRight","description","marginTop","padding","margin","minHeight","this","props","children","React","Component","Panel","Collapse","Option","Select","state","chartData","loan","number","chart","Chart","container","data","interval","position","render","backgroundColor","marginBottom","onBack","title","subTitle","href","gutter","span","bordered","size","placeholder","defaultValue","value","disabled","type","precision","valueStyle","color","prefix","ArrowUpOutlined","ArrowDownOutlined","suffix","message","showIcon","defaultActiveKey","expandIcon","isActive","CaretRightOutlined","rotate","header","id","display","justifyContent","flexWrap","App","displayName","name","path","component","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33c41304.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Layout, Menu, Empty } from \"antd\";\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from \"@ant-design/icons\";\r\nimport \"./Navigation.scss\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nexport default class StyleGuide extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layout style={{ height: \"100vh\" }}>\r\n        <Header className=\"header\">\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]} style={{ lineHeight: \"64px\" }}>\r\n            <Menu.Item key=\"2\" style={{ marginLeft: \"250px\" }}>\r\n              Style Guide\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Layout>\r\n          <Sider width={300} className=\"site-layout-background\">\r\n            <Menu\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={[\"1\"]}\r\n              defaultOpenKeys={[\"sub1\"]}\r\n              style={{ height: \"100%\", borderRight: 0 }}\r\n            >\r\n              <Empty description=\"Placeholder \" style={{ marginTop: \"50px\" }} />\r\n            </Menu>\r\n          </Sider>\r\n          <Layout style={{ padding: \"0 24px 24px\" }}>\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                padding: 24,\r\n                margin: 0,\r\n                minHeight: 280\r\n              }}\r\n            >\r\n              {this.props.children}\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { PageHeader, Card, Col, Row, Input, Select, Statistic, Button, Alert, Collapse } from \"antd\";\r\nimport { Chart } from \"@antv/g2\";\r\nimport { ArrowUpOutlined, ArrowDownOutlined, CaretRightOutlined } from \"@ant-design/icons\";\r\nimport \"./Styleguide.scss\";\r\n\r\nconst { Panel } = Collapse;\r\nconst { Option } = Select;\r\n\r\nexport default class StyleGuide extends React.Component {\r\n  state = {\r\n    chartData: [\r\n      { loan: \"loan #1\", number: 10000 },\r\n      { loan: \"loan #2\", number: 12000 },\r\n      { loan: \"loan #3\", number: 14000 },\r\n      { loan: \"loan #4\", number: 7000 }\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    const chart = new Chart({\r\n      container: \"test-chart\",\r\n      width: 400,\r\n      height: 200\r\n    });\r\n\r\n    chart.data(this.state.chartData);\r\n\r\n    chart.interval().position(\"loan*number\");\r\n\r\n    chart.render();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PageHeader\r\n          style={{ backgroundColor: \"white\", marginBottom: \"16px\" }}\r\n          onBack={() => null}\r\n          title=\"Style Guide\"\r\n          subTitle=\"Student Loan Calculator\"\r\n        >\r\n          The Student Loan Calculator Application will utilize the Design Framework \"Ant Design\"\r\n          <br />\r\n          The full package can be found here: <a href=\"https://www.npmjs.com/package/antd\">Antd - npm</a>\r\n          <br />\r\n          Below are a collection of components and styles that will be used most frequently in the application\r\n        </PageHeader>\r\n        <Row gutter={16}>\r\n          <Col span={8}>\r\n            <Card title=\"Text Inputs\" bordered={false}>\r\n              <Input size=\"large\" placeholder=\"large size\" style={{ marginTop: \"8px\" }} />\r\n              <Input placeholder=\"default size\" style={{ marginTop: \"8px\" }} />\r\n              <Input size=\"small\" placeholder=\"small size\" style={{ marginTop: \"8px\" }} />\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title=\"Dropdowns\" bordered={false}>\r\n              <Select defaultValue=\"lucy\" size=\"large\" style={{ width: \"100%\", marginTop: \"8px\" }}>\r\n                <Option value=\"lucy\">Student Loans</Option>\r\n              </Select>\r\n              <Select defaultValue=\"lucy\" style={{ width: \"100%\", marginTop: \"8px\" }}>\r\n                <Option value=\"jack\">Student Loans</Option>\r\n                <Option value=\"lucy\">Payment Plans</Option>\r\n                <Option value=\"disabled\" disabled>\r\n                  Test\r\n                </Option>\r\n                <Option value=\"Yiminghe\">Student Loans</Option>\r\n              </Select>\r\n              <Select defaultValue=\"lucy\" style={{ width: \"100%\", marginTop: \"8px\" }} disabled>\r\n                <Option value=\"lucy\">Student Loans</Option>\r\n              </Select>\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title=\"Buttons\" bordered={false}>\r\n              <Button type=\"primary\" style={{ width: \"100%\", marginTop: \"8px\" }} size=\"large\">\r\n                Primary\r\n              </Button>\r\n              <Button style={{ width: \"100%\", marginTop: \"8px\" }}>Default</Button>\r\n              <Button type=\"dashed\" style={{ width: \"100%\", marginTop: \"8px\" }}>\r\n                Dashed\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={16} style={{ marginTop: \"16px\" }}>\r\n          <Col span={8}>\r\n            <Card title=\"Financial Statistcs\" bordered={false}>\r\n              <Statistic\r\n                title=\"Active\"\r\n                value={112893}\r\n                precision={2}\r\n                valueStyle={{ color: \"#3f8600\" }}\r\n                prefix={<ArrowUpOutlined />}\r\n              />\r\n              <Statistic\r\n                title=\"Idle\"\r\n                value={9.3}\r\n                precision={2}\r\n                valueStyle={{ color: \"#cf1322\" }}\r\n                prefix={<ArrowDownOutlined />}\r\n                suffix=\"%\"\r\n              />\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title=\"Feedback Message\" bordered={false}>\r\n              <Alert\r\n                message=\"Success Tips\"\r\n                description=\"Detailed description and advice about successful copywriting.\"\r\n                type=\"success\"\r\n                showIcon\r\n              />\r\n              <Alert message=\"Informational Notes\" type=\"info\" showIcon />\r\n              <Alert message=\"Warning\" type=\"warning\" showIcon />\r\n              <Alert message=\"Error\" type=\"error\" showIcon />{\" \"}\r\n            </Card>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Card title=\"Card title\" bordered={false}>\r\n              <Collapse\r\n                bordered={false}\r\n                defaultActiveKey={[\"1\"]}\r\n                expandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n              >\r\n                <Panel header=\"This is panel header 1\" key=\"1\">\r\n                  Recurring Payements\r\n                </Panel>\r\n                <Panel header=\"This is panel header 2\" key=\"2\">\r\n                  One-time Payments\r\n                </Panel>\r\n              </Collapse>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={16} style={{ marginTop: \"16px\" }}>\r\n          <Col span={8}>\r\n            <Card title=\"Example Chart\" bordered={false}>\r\n              <div id=\"test-chart\"></div>\r\n            </Card>\r\n          </Col>\r\n          <Col span={16}>\r\n            <Card title=\"Color Guidelines\" bordered={false}>\r\n              <h1>\r\n                The colors of the project have no been finalized, however, the folowing is the current color scheme:\r\n              </h1>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", flexWrap: \"wrap\" }}>\r\n                <div>\r\n                  <span>\r\n                    Primary Color #1: <p>#0F9AEE</p>\r\n                  </span>\r\n                  <div style={{ height: \"100px\", width: \"100px\", backgroundColor: \"#0F9AEE\" }}></div>\r\n                </div>\r\n                <div>\r\n                  <span>\r\n                    Primary Color #2:\r\n                    <p>#C64FA0</p>\r\n                  </span>\r\n                  <div style={{ height: \"100px\", width: \"100px\", backgroundColor: \"#C64FA0\" }}></div>\r\n                </div>\r\n                <div>\r\n                  <span>\r\n                    Secondary Color #1:\r\n                    <p>#42D6F9</p>\r\n                  </span>\r\n                  <div style={{ height: \"100px\", width: \"100px\", backgroundColor: \"#42D6F9\" }}></div>\r\n                </div>\r\n                <div>\r\n                  <span>\r\n                    Secondary Color #2:\r\n                    <p>#f87AA3</p>\r\n                  </span>\r\n                  <div style={{ height: \"100px\", width: \"100px\", backgroundColor: \"#f87AA3\" }}></div>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Navigation from \"components/Navigation\";\r\nimport StyleGuide from \"./StyleGuide/StyleGuide\";\r\nimport \"./App.scss\";\r\n\r\nexport default class App extends React.Component {\r\n  displayName = App.name;\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Navigation>\r\n          <Route path=\"/\" component={StyleGuide} />\r\n        </Navigation>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./pages/App\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"core-js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}